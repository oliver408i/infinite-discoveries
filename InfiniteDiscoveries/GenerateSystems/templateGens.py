from colour import Color

# Generates a spiral effect for WR binaries.
def generateWRBinarySpiral(bodyName, base_dir):
    spiralCfg = open(base_dir / "Configs" / f"{bodyName}_SPIRAL.cfg", "x")
    spiralCfg.write(
        "@Kopernicus\n"
        "{\n"
        "    Body\n"
        "    {\n"
        "        name = " + bodyName + "-WR-SPIRAL1\n"
        "        Tag = InfD_WR_SPIRAL\n"
        "        Template\n"
        "        {\n"
        "            name = Jool\n"
        "        }\n"
        "        Properties\n"
        "        {\n"
        "            description = \n"
        "            radius = 1000\n"
        "            mass = 420\n"
        "            rotationPeriod = 420000\n"
        "            initialRotation = 0\n"
        "            sphereOfInfluence = 1\n"
        "            selectable = False\n"
        "        }\n"
        "        Orbit\n"
        "        {\n"
        "            referenceBody = " + bodyName + "\n"
        "            semiMajorAxis = 1\n"
        "            period = 100000000000000000000000\n"
        "            argumentOfPeriapsis = 90\n"
        "            mode = 0\n"
        "            icon = NONE\n"
        "        }\n"
        "        Rings\n"
        "        {\n"
        "            // Disks\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = -2\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1450\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = -1\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1350\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 0\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1250\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 1\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1150\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 2\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1050\n"
        "            }\n"
        "        }\n"
        "    }\n"
        "    Body\n"
        "    {\n"
        "        name = " + bodyName + "-WR-SPIRAL2\n"
        "        Tag = InfD_WR_SPIRAL\n"
        "        Template\n"
        "        {\n"
        "            name = Jool\n"
        "        }\n"
        "        Properties\n"
        "        {\n"
        "            description = \n"
        "            radius = 1000\n"
        "            mass = 420\n"
        "            rotationPeriod = 420000\n"
        "            initialRotation = 90\n"
        "            sphereOfInfluence = 1\n"
        "            selectable = False\n"
        "        }\n"
        "        Orbit\n"
        "        {\n"
        "            referenceBody = " + bodyName + "\n"
        "            semiMajorAxis = 1\n"
        "            period = 100000000000000000000000\n"
        "            argumentOfPeriapsis = 90\n"
        "            mode = 0\n"
        "            icon = NONE\n"
        "        }\n"
        "        Rings\n"
        "        {\n"
        "            // Disks\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = -2\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1450\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = -1\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1350\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 0\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1250\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 1\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1150\n"
        "            }\n"
        "            Ring\n"
        "            {\n"
        "                innerRadius = 301\n"
        "                outerRadius = 150000000000\n"
        "                steps = 10000\n"
        "                texture = InfiniteDiscoveries/Textures/Misc/WR_BinaryRings.dds\n"
        "                tiles = 1\n"
        "                color = 1,1,1,1\n"
        "                unlit = True\n"
        "                useNewShader = False\n"
        "                penumbraMultiplier = 10\n"
        "                angle = 2\n"
        "                longitudeOfAscendingNode = 0\n"
        "                lockRotation = False\n"
        "                rotationPeriod = 1050\n"
        "            }\n"
        "        }\n"
        "    }\n"
        "}\n"
    )
# Generate nebula for something
def generateNebula(bodyName, base_dir):
    if not (base_dir / "Visuals" / "NiftyNebulae").exists():
        (base_dir / "Visuals" / "NiftyNebulae").mkdir()
    nebulaCfg = open(base_dir / "Visuals" / "NiftyNebulae" / f"{bodyName}_NEBULA.cfg", "x")
    nebulaCfg.write(
        "NiftyNebula\n"
        "{\n"
        "    name = " + bodyName + "_NEBULA\n"
        "    nebulaRadius = 600\n"
        "    domainScale = 1,1,1\n"
        "    parentName = " + bodyName + "\n"
        "    densityMultiplier = 0.7\n"
        "    shouldFadeWithSkybox = true\n"
        "    fadeAmount = 0.25\n"
        "    texture = InfiniteDiscoveries/Textures/Misc/WR_Nebula.png\n"
        "    textureTileSize = 256\n"
        "    noiseStrength = 0.2\n"
        "    noiseFrequency = 30\n"
        "}\n"
    )
# Generate glowing clouds for gas giants because idk lmfao they look cool why else?
def generateSuperheatedClouds(eveCfg,planetName,temp, colorsReversed, colorsys):
    spot = int((temp/10000)*99)

    color = Color.get_rgb(Color(colorsReversed[spot]))
    colorHSV = colorsys.rgb_to_hsv(color[0],color[1],color[2])
    colorSaturated = colorsys.hsv_to_rgb(colorHSV[0],colorHSV[1]*2,colorHSV[2])
    eveCfg.write(
            "    OBJECT\n"
            "    {\n"
            "        name = " + planetName + "_HEATEDCLOUDS" + "\n"
            "        body = " + planetName + "\n"
            "        altitude = 10000\n"
            "        detailSpeed = 0,6,0\n"
            "        settings\n"
            "        {\n"
            "            _DetailTex = InfiniteDiscoveries/Visuals/EVE/detail1\n"
            "            _DetailScale = 30\n"
            "            _Color = " + str(colorSaturated[0]*255) + "," + str(colorSaturated[1]*255) + "," + str(colorSaturated[2]*255) + ", 128\n"
            "            _MainTex\n"
            "            {\n"
            "                value = InfiniteDiscoveries/Textures/Clouds/" + str(planetName) + "_CLOUDS\n"
            "                type = AlphaMap\n"
            "                alphaMask = ALPHAMAP_R\n"
            "            }\n"
            "            _FlowMap\n"
            "            {\n"
            "				 texture = Infinite_VolumetricClouds/Textures/FlowMap\n"
            "                speed = 0.01\n"
            "                displacement = 0.5\n"
            "            }\n"
            "        }\n"
            "        layer2D\n"
            "        {\n"
            "            macroCloudMaterial\n"
            "            {\n"
            "                _MinLight = 2\n"
            "            }\n"
            "        }\n"
            "    }\n"
    )